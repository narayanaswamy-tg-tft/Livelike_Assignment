name: automationExercise
on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PASSWORD: ${{ secrets.PASSWORD }} # Use the PASSWORD secret stored in GitHub Secrets
    steps:
      # Step to check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
      # Step to set up Node.js with the specified version
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      # Step to cache Node.js modules to speed up subsequent builds
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
      # Step to install the project dependencies
      - name: Install dependencies
        run: npm install
      # Step to install Playwright and its dependencies
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      # Step to run the tests; continues even if tests fail
      - name: Run tests
        run: npm test
        continue-on-error: false
      # Step to generate the Allure report after tests are executed
      - name: Generate Allure Report
        run: npx allure-commandline generate allure-results --clean -o allure-report
        if: always()
      # Step to upload the Allure report as an artifact
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
        if: always()
